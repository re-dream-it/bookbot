import time
import telebot
from telebot import types
import config
from db import DB
import buttons

# INIT
db = DB('db.db')
bot = telebot.TeleBot(config.token)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands = ['start'])
def law(message):
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç.
        if (not db.check_user(message.chat.id)):
            db.add_user(message.chat.id, message.chat.username, message.chat.first_name)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1).add(buttons.book_list_button, buttons.book_find_button, buttons.book_add_button)
        bot.send_message(message.chat.id, 'üè† –ü—Ä–∏–≤–µ—Ç!\n\n–ë–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –±–∞–∑—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∞–º–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –∫–Ω–∏–≥—É. –£ –∫–Ω–∏–≥ –¥–æ–ª–∂–Ω—ã –∏–º–µ—é—Ç—Å—è –∂–∞–Ω—Ä—ã. –í—ã –∏–º–µ–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏/–∏–ª–∏ –∞–≤—Ç–æ—Ä—É.', reply_markup = keyboard)
    except Exception as e:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –≤ —Å–ª—É—á–∞–µ –µ–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è.
        print(e)
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞!\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É: @re_dream')  

    # –û–±–Ω—É–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    db.set_status(message.chat.id, '0')

@bot.message_handler(content_types = ['text'])
def law(message):
    status = db.get_status(message.chat.id)

    if status == '0':
        if message.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É':
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä –¥–ª—è –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å.
            keyboard = types.InlineKeyboardMarkup()
            genres = db.get_all_genres()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Å—Ç—Ä–æ–∫ –∂–∞–Ω—Ä–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
            for genre in genres:
                button = types.InlineKeyboardButton(genre[1], callback_data = 'genre_chosen:' + str(genre[0]))
                keyboard.add(button)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –∂–∞–Ω—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            keyboard.add(buttons.genre_add_button)
            bot.send_message(message.chat.id, 'üîπ –í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π: ', reply_markup = keyboard)

        elif message.text == 'üìñ –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥':
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥.
            books = db.get_all_books()
            keyboard = types.InlineKeyboardMarkup()

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–∏–≥, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
            for book in books:
                button = types.InlineKeyboardButton('üìï "' + book[1] + '", ' + str(book[2]), callback_data = 'book_chosen:' + str(book[0]))
                keyboard.add(button)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            keyboard.add(buttons.filter_button)
            bot.send_message(message.chat.id, 'üîπ –ö–Ω–∏–≥ –Ω–∞–π–¥–µ–Ω–æ: ' + str(len(books)) +'\n\nüîπ –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞: ', reply_markup = keyboard)

        elif message.text == 'üîé –ü–æ–∏—Å–∫ –∫–Ω–∏–≥':
            # –ó–∞–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.
            db.set_status(message.chat.id, 'book_search')
            cancel_button = types.InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞', callback_data = 'cancel_search')
            keyboard = types.InlineKeyboardMarkup().add(cancel_button)
            bot.send_message(message.chat.id, 'üîπ –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∞–≤—Ç–æ—Ä—É/–Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–∏–≥–∏: ', reply_markup = keyboard)

    elif status == 'book_search' and message.text:
        books = db.search_books(message.text)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞.
        if len(books) >= 1:
            keyboard = types.InlineKeyboardMarkup()

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–∏–≥, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
            for book in books:
                button = types.InlineKeyboardButton('üìï "' + book[1] + '", ' + str(book[2]), callback_data = 'book_chosen:' + str(book[0]))
                keyboard.add(button)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            bot.send_message(message.chat.id, 'üîπ –ö–Ω–∏–≥ –Ω–∞–π–¥–µ–Ω–æ: ' + str(len(books)) +'\n\nüîπ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: ', reply_markup = keyboard)
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥!')

        db.set_status(message.chat.id, '0')

    # –î–æ–±–∞–≤–ª—è–µ–º –∂–∞–Ω—Ä.
    elif status == 'add_genre' and message.text:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–∫–æ–≥–æ –∂–∞–Ω—Ä–∞ –≤ –ë–î.
        if(not db.check_genre(message.text)):
            # –í–Ω–æ—Å–∏–º –∂–∞–Ω—Ä –≤ –ë–î.
            db.add_genre(message.text)
            keyboard = types.InlineKeyboardMarkup()
            genres = db.get_all_genres()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Å—Ç—Ä–æ–∫ –∂–∞–Ω—Ä–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
            for genre in genres:
                button = types.InlineKeyboardButton(genre[1], callback_data = 'genre_chosen:' + str(genre[0]))
                keyboard.add(button)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –∂–∞–Ω—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–±–Ω—É–ª—è–µ–º —Å—Ç–∞—Ç—É—Å.
            keyboard.add(buttons.genre_add_button)
            bot.send_message(message.chat.id, '‚òëÔ∏è –ñ–∞–Ω—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –¥–ª—è –∫–Ω–∏–≥–∏:', reply_markup = keyboard)
            db.set_status(message.chat.id, '0')
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –î–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É.
    elif 'add_book:' in status and message.text:
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∫–Ω–∏–≥–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
        payload = status.split(':')[1]
        book = message.text.split('\n\n', 2)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ñ–æ—Ä–º–∞—Ç–∞
        if len(book) == 3:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            db.add_book(book[0], book[1], book[2], payload)
            bot.send_message(message.chat.id, '‚òëÔ∏è –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
            db.set_status(message.chat.id, '0') 
        else: 
            bot.send_message(message.chat.id, '‚ö†Ô∏è –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É!')

@bot.callback_query_handler(func = lambda call: True)
def callback_inline(call):
    # –î–æ–±–∞–≤–∏—Ç—å –∂–∞–Ω—Ä
    if call.data == 'add_genre':
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∂–∞–Ω—Ä–∞.
        db.set_status(call.message.chat.id, 'add_genre')
        back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back:genre_list')
        keyboard = types.InlineKeyboardMarkup().add(back_button)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üîπ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∂–∞–Ω—Ä–∞:', reply_markup = keyboard)
        
    # –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫
    if call.data == 'cancel_search':
        db.set_status(call.message.chat.id, '0')
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '‚ö†Ô∏è –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω!')

    # –í—ã–±—Ä–∞–Ω –∂–∞–Ω—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏.
    elif 'genre_chosen:' in call.data:
        # –ü–æ–ª—É—á–∞–µ–º id –∂–∞–Ω—Ä–∞.
        payload = call.data.split(':')[1]

        # –ó–∞–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏, –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
        db.set_status(call.message.chat.id, 'add_book:' + str(payload))
        back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back:genre_list')
        keyboard = types.InlineKeyboardMarkup().add(back_button)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üîπ *–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:*\n\n`–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏\n\n–ê–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏`', reply_markup = keyboard, parse_mode = 'markdown')

    # –í—ã–±—Ä–∞–Ω–∞ –∫–Ω–∏–≥–∞.
    elif 'book_chosen:' in call.data:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
        payload = call.data.split(':')[1]
        book = db.get_book(payload)
        genre = db.get_genre_name(book[4])

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        delete_button = types.InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å', callback_data = 'delete_book:' + str(book[0]))
        back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back:book_list')
        keyboard = types.InlineKeyboardMarkup(row_width = 1).add(delete_button, back_button)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üìñ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ.\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:* ' + book[1] + '\n\n*–ê–≤—Ç–æ—Ä:* ' + book[2] + '\n\n*–ñ–∞–Ω—Ä:* ' + genre + '\n\n*–û–ø–∏—Å–∞–Ω–∏–µ:* ' + book[3], parse_mode = 'markdown', reply_markup = keyboard)

    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
    elif 'delete_book:' in call.data:
        payload = call.data.split(':')[1]
        db.delete_book(payload)
        back_button = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back:book_list')
        keyboard = types.InlineKeyboardMarkup().add(back_button)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!', reply_markup = keyboard)

    # –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∂–∞–Ω—Ä—É
    elif call.data == 'choose_filter':
        keyboard = types.InlineKeyboardMarkup()
        genres = db.get_all_genres()
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Å—Ç—Ä–æ–∫ –∂–∞–Ω—Ä–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
        for genre in genres:
            button = types.InlineKeyboardButton(genre[1], callback_data = 'filter_chosen:' + str(genre[0]))
            keyboard.add(button)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
        clear_filter_button = types.InlineKeyboardButton('üóë –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä', callback_data = 'back:book_list')
        keyboard.add(clear_filter_button)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üîπ –í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup = keyboard)

    # –í—ã–±—Ä–∞–Ω —Ñ–∏–ª—å—Ç—Ä
    elif 'filter_chosen:' in call.data:
        payload = call.data.split(':')[1]
        books = db.get_genre_books(payload)
        genre_name = db.get_genre_name(payload)

        keyboard = types.InlineKeyboardMarkup()

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–∏–≥, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
        for book in books:
            button = types.InlineKeyboardButton('üìï "' + book[1] + '", ' + str(book[2]), callback_data = 'book_chosen:' + str(book[0]))
            keyboard.add(button)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
        keyboard.add(buttons.filter_button)
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üîπ –ö–Ω–∏–≥ –Ω–∞–π–¥–µ–Ω–æ: ' + str(len(books)) + '\n\nüîπ –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ –∂–∞–Ω—Ä—É "' + genre_name + '"\n\nüîπ –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞:', reply_markup = keyboard)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞.
    elif 'back:' in call.data:
        payload = call.data.split(':')[1]
        
        # –í—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ < –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞ | –í—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ < –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
        if payload == 'genre_list':
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏.
            keyboard = types.InlineKeyboardMarkup()
            genres = db.get_all_genres()
            
            for genre in genres:
                button = types.InlineKeyboardButton(genre[1], callback_data = 'genre_chosen:' + str(genre[0]))
                keyboard.add(button)

            keyboard.add(buttons.genre_add_button)
            bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üîπ –í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π: ', reply_markup = keyboard)
            db.set_status(call.message.chat.id, '0')

        # –í—ã–±–æ—Ä –∫–Ω–∏–≥–∏ < –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ | –í—ã–±–æ—Ä –∫–Ω–∏–≥–∏ < –í—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–∞
        elif payload == 'book_list':
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥.
            books = db.get_all_books()
            keyboard = types.InlineKeyboardMarkup()

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–Ω–∏–≥, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –ë–î.
            for book in books:
                button = types.InlineKeyboardButton('üìï "' + book[1] + '", ' + str(book[2]), callback_data = 'book_chosen:' + str(book[0]))
                keyboard.add(button)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            keyboard.add(buttons.filter_button)
            bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = 'üîπ –ö–Ω–∏–≥ –Ω–∞–π–¥–µ–Ω–æ: ' + str(len(books)) + '\n\nüîπ –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞: ', reply_markup = keyboard)


# –£–∫—Ä–∞—Å–∏—Ç—å –≤—Å–µ —ç–º–æ–¥–∑—è–º–∏ !!!!!!!!!!!!!!!!!!!!!!!!
# –°–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

bot.polling(non_stop = True, interval = 0)

# while True:
#     try:
#         bot.polling(non_stop = True, interval = 0)
#     except Exception as e:
#         print(e)
#         # –î–æ–ø–∏—Å–∞—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ txt                         
#         time.sleep(3)
#         continue
